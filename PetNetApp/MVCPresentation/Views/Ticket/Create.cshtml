@model DataObjects.Ticket

@{
    ViewBag.Title = "Create";
}

<h2>Create New Ticket</h2>

@using (Html.BeginForm("Create", "Ticket"))
{
    @Html.AntiForgeryToken()

    <div class="form">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(model => model.TicketStatusId, new { @Value = "Open" })

        <div class="form-group">
            <label class="control-label col-md-2">Ticket Title</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.TicketTitle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TicketTitle, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Ticket Context</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.TicketContext, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TicketContext, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
    </div>

    <p>@ViewBag.TicketStatus</p>
}

@if (User.IsInRole("Administrator") || User.IsInRole("Admin") || User.IsInRole("Moderator"))
{
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
